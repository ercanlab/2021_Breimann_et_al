{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Here two example scripts for generating the plots as shown in the paper. \
\

\f1\b Step 1: Create a database of all FRAP data (create_database_for_plotting.ipynb) 
\f0\b0 \
Typically I work in folders for each experiment. So data for every experiment will be saved in a folder with the title: \'93YYMMDD_strain_condition\'94. The database scripts runs through the directory specified and finds all .txt files created by the MATLAB script. \
 The last step fills in the \'93protein\'94 column to record which protein had a GFP tag in the strain and if the strain had a knockout, this step is obviously not required but makes plotting easier. \
\
\

\f1\b Step 2. Plot the results of the FRAP experiment (Example_plotting_script_for_DPY27-GFP-H2B.ipynb) 
\f0\b0 \
The second step is to create the plots for the FRAP experiments. The script uses the database that was created in step 1 to load the data for plotting. The mobile and immobile fraction, tau and t-half plots are directly plotted from the values in the database. The FRAP recovery curve has some additional steps before for stylistic purposes. \
\
 }